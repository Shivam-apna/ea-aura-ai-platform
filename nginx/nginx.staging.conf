worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Logging
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log;

  # Upstream definitions
  upstream backend_app {
    server backend:8081;
  }

  upstream elasticsearch {
    server elasticsearch:9200;
  }

  upstream vault {
    server vault:8200;
  }

  upstream keycloak {
    server keycloak:8080;
  }

  upstream dbeaver {
    server dbeaver:8978;
  }

  # Rate limiting
  limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;
  limit_req_zone $binary_remote_addr zone=staging:10m rate=50r/s;

  # HTTP server (for local development and fallback)
  server {
    listen 80;
    server_name localhost staging.ea-aura.ai;

    # Health check endpoint
    location /health {
      limit_req zone=staging burst=10 nodelay;
      proxy_pass http://backend_app/health;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API routes
    location /api/ {
      limit_req zone=api burst=30 nodelay;
      proxy_pass http://backend_app;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }

    # Elasticsearch (staging access with authentication)
    location /elasticsearch/ {
      auth_basic "Elasticsearch Access";
      auth_basic_user_file /etc/nginx/.htpasswd;
      proxy_pass http://elasticsearch/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Vault (staging access with authentication)
    location /vault/ {
      auth_basic "Vault Access";
      auth_basic_user_file /etc/nginx/.htpasswd;
      proxy_pass http://vault/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Keycloak (staging access)
    location /auth/ {
      limit_req zone=staging burst=20 nodelay;
      proxy_pass http://keycloak/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # DBeaver (staging access with authentication)
    location /dbeaver/ {
      auth_basic "DBeaver Access";
      auth_basic_user_file /etc/nginx/.htpasswd;
      proxy_pass http://dbeaver/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
    }

    # Default backend route
    location / {
      limit_req zone=staging burst=50 nodelay;
      proxy_pass http://backend_app;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # HTTPS server (for production deployment)
  server {
    listen 443 ssl http2;
    server_name staging.ea-aura.ai;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/staging.ea-aura.ai.crt;
    ssl_certificate_key /etc/nginx/ssl/staging.ea-aura.ai.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Health check endpoint
    location /health {
      limit_req zone=staging burst=10 nodelay;
      proxy_pass http://backend_app/health;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API routes
    location /api/ {
      limit_req zone=api burst=30 nodelay;
      proxy_pass http://backend_app;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }

    # Elasticsearch (staging access with authentication)
    location /elasticsearch/ {
      auth_basic "Elasticsearch Access";
      auth_basic_user_file /etc/nginx/.htpasswd;
      proxy_pass http://elasticsearch/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Vault (staging access with authentication)
    location /vault/ {
      auth_basic "Vault Access";
      auth_basic_user_file /etc/nginx/.htpasswd;
      proxy_pass http://vault/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Keycloak (staging access)
    location /auth/ {
      limit_req zone=staging burst=20 nodelay;
      proxy_pass http://keycloak/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # DBeaver (staging access with authentication)
    location /dbeaver/ {
      auth_basic "DBeaver Access";
      auth_basic_user_file /etc/nginx/.htpasswd;
      proxy_pass http://dbeaver/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
    }

    # Frontend static files (if served by nginx)
    location / {
      limit_req zone=staging burst=50 nodelay;
      proxy_pass http://backend_app;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
} 