worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Logging
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log;

  # Performance optimizations
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  client_max_body_size 100M;

  # Gzip compression
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/atom+xml
    image/svg+xml;

  # Upstream definitions
  upstream backend_app {
    server backend:8081;
  }

  upstream elasticsearch {
    server elasticsearch:9200;
  }

  upstream vault {
    server vault:8200;
  }

  upstream keycloak {
    server keycloak:8080;
  }

  upstream dbeaver {
    server dbeaver:8978;
  }

  upstream frontend {
    server frontend:80;
  }


  upstream kibana {
  server kibana:5601;
  }

  # Note: Direct proxy_pass uses service name and port; no upstream block needed
  # Removing unused upstream avoids startup failures if DNS not yet ready


  # Rate limiting
  limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;
  limit_req_zone $binary_remote_addr zone=staging:10m rate=50r/s;

  # Security headers (CSP removed)
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header X-Frame-Options "SAMEORIGIN" always;

  # HTTP server (redirect to HTTPS)
  server {
    listen 80;
    server_name staging.ea-aura.ai;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    return 301 https://$server_name$request_uri;
  }

  # HTTPS server
  server {
    listen 443 ssl;
    server_name staging.ea-aura.ai;

    ssl_certificate /etc/letsencrypt/live/staging.ea-aura.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.ea-aura.ai/privkey.pem;

    # Security headers for HTTPS (CSP removed)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Frame-Options "SAMEORIGIN" always;


    # Health check endpoint
    location /health {
      limit_req zone=staging burst=10 nodelay;
      proxy_pass http://backend_app/health;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port 443;
    }

    # API routes
    location /api/ {
      limit_req zone=api burst=30 nodelay;
      proxy_pass http://backend_app;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }

    # Elasticsearch (staging access)
    location /elasticsearch/ {
      proxy_pass http://elasticsearch/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port 443;
    }

    # Vault (staging access)
    location /vault/ {
      proxy_pass http://vault/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port 443;
    }

    # Kibana (staging access)
    location /kibana/ {
      proxy_pass http://kibana/kibana/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
      
      # Handle WebSocket connections for Kibana
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    # Kibana API endpoints
    location /kibana/api/ {
      proxy_pass http://kibana/kibana/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }


   # Keycloak (staging access)
    location /auth/ {
      limit_req zone=staging burst=20 nodelay;
      proxy_pass http://keycloak/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }

# Keycloak admin interface
    location /admin/ {
      limit_req zone=staging burst=20 nodelay;
      proxy_pass http://keycloak/admin/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }

    # Keycloak resources (CSS, JS, images)
    location /resources/ {
      limit_req zone=staging burst=20 nodelay;
      proxy_pass http://keycloak/resources/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Port 443;

      # Cache static resources
      proxy_cache_valid 200 1h;
      expires 1h;
      add_header Cache-Control "public, immutable";
    }

    # Keycloak realms (OIDC endpoints, third-party cookie checks)
    location /realms/ {
      limit_req zone=staging burst=20 nodelay;
      proxy_pass http://keycloak/realms/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;

      # Enhanced headers for Keycloak's iframe functionality (CSP removed)
      add_header X-Frame-Options "SAMEORIGIN" always;
    }

    # DBeaver API endpoints (must come before main dbeaver location)
    location ~ ^/dbeaver/api/ {
      proxy_pass http://dbeaver;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }

    # DBeaver (staging access)
    location /dbeaver/ {
      proxy_pass http://dbeaver/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }

    # Frontend static files (must come before API routes)
    location / {
      limit_req zone=staging burst=50 nodelay;
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Port 443;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
    }

    # Replace your existing NiFi location blocks with these:

    # NiFi API endpoints (must come BEFORE the main /nifi/ location)
    location /nifi-api/ {

      proxy_pass http://nifi:8082/nifi-api/;
      
      proxy_set_header Host $server_name;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $server_name;
      proxy_set_header X-Forwarded-Port 443;

      # NiFi proxy headers
      proxy_set_header X-ProxyScheme https;
      proxy_set_header X-ProxyHost $server_name;
      proxy_set_header X-ProxyPort 443;

      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
      proxy_buffering off;
    }

    # Handle the double path issue - redirect /nifi/nifi-api/ to /nifi-api/
    location /nifi/nifi-api/ {
      return 301 https://$server_name/nifi-api$request_uri;
    }

    location /nifi/upload-to-nifi {
      proxy_pass http://nifi:9090/upload-to-nifi;
      
      proxy_set_header Host $server_name;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $server_name;
      proxy_set_header X-Forwarded-Port 443;

      # NiFi proxy headers
      proxy_set_header X-ProxyScheme https;
      proxy_set_header X-ProxyHost $server_name;
      proxy_set_header X-ProxyPort 443;

      client_max_body_size 100M;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
      proxy_buffering off;
    }

    # Main NiFi UI
    location /nifi/ {
      proxy_pass http://nifi:8082/nifi/;
      
      proxy_set_header Host $server_name;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Server $server_name;
      proxy_set_header X-Forwarded-Port 443;

      # NiFi proxy headers
      proxy_set_header X-ProxyScheme https;
      proxy_set_header X-ProxyHost $server_name;
      proxy_set_header X-ProxyPort 443;

      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      # Cookie handling
      proxy_cookie_path /nifi/ /nifi/;
      proxy_cookie_domain ~^(.*)$ $server_name;
      proxy_cookie_flags ~ secure;
      proxy_cookie_flags JSESSIONID secure httponly samesite=lax;

      client_max_body_size 100M;
      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
      proxy_send_timeout 300s;
      proxy_buffering off;
    }
  }
}